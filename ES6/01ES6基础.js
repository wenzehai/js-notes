/*
* 编译工具
* babel
*
* traceur   google出的编译器
*
* bootstrap     引导程序，跟响应式bootstrap不一样
*
* ====================================================================
* 编译方法
*
* 第一种方法：
*   <script src="bootstrap.js"></script>
    <script src="traceur.js"></script>
    <script type="module">

    </script>
*
*第二种方法：
*   在线编译
*   babeljs.io
*
*第三种方法：
*   直接在node里面使用
*   a).直接用，需要添加'use strict'
*   b).node --harmony_destructuring 1.js            //和谐解析
*
* =====================================================================
* 新增功能
* 1.定义变量，已经被浏览器实现了。
*   var a = 12;
*
*   let a = 12;
*
*   let特点：只能在代码块里面使用，实质是匿名函数立即调用
*
*
* 总结：块级作用域，
*
* --------------------------------
* const——用来定义 常量
*       一旦赋值，以后再也修改不了了。const必须给初始值，因为以后再也无法赋值了。而且不能重复声明
*       用途：为了防止意外修改变量。比如引入苦命，组件名
*
* -------------------------------
* 字符串连接
*   原来的做法 ''+a+''
*   现在的做法： var str = ``     字符串模板
*   var a = '新华网'
*   var str = ` hhhhhhhhhhhhhhhh ${a} jjjjjjjjjjjjjjjjjjjj`
*
* ----------------------------------------------------------
* 解构赋值
*
*   左边和右边的一样的
*
*
*   var [a,b,c]=[12,4,12];
*   console.log(a,b,c);
*
*   根json配合
*   var {a,b,c} = {a:12,b:4,c:56}   跟顺序无关
*
*   模式匹配，左右的形式要相等
*   var [a,[b,c],d] = [12,[1,2],5]
*   console.log(a,b,c,d);
*
*   交互——数据解析：
*       [{title:''}]
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
*
* */